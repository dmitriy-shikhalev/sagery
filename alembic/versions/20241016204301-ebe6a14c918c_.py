"""empty message

Revision ID: ebe6a14c918c
Revises:
Create Date: 2024-10-16 20:43:01.789905

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'ebe6a14c918c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute('DROP TYPE IF EXISTS Status')
    op.execute('DROP TYPE IF EXISTS ThreadStatus')

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'jobs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('status', postgresql.ENUM('PENDING', 'RUNNING', 'DONE', 'FAILED', name='status'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_jobs_name'), 'jobs', ['name'], unique=False)
    op.create_index(op.f('ix_jobs_status'), 'jobs', ['status'], unique=False)
    op.create_table(
        'function_calls',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('job_id', sa.Integer(), nullable=False),
        sa.Column('num', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('properties', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('index', sa.Integer(), nullable=False),
        sa.Column('status', postgresql.ENUM('PENDING', 'RUNNING', 'DONE', 'FAILED', name='status'), nullable=False),
        sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_function_calls_job_id'), 'function_calls', ['job_id'], unique=False)
    op.create_index(op.f('ix_function_calls_status'), 'function_calls', ['status'], unique=False)
    op.create_index('uix_job_function_call', 'function_calls', ['job_id', 'num'], unique=True)
    op.create_table(
        'threads',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('job_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('accounted', sa.Boolean(), nullable=False),
        sa.Column('managed', sa.Boolean(), nullable=False),
        sa.Column('status', postgresql.ENUM('OPEN', 'CLOSED', name='threadstatus'), nullable=False),
        sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_threads_job_id'), 'threads', ['job_id'], unique=False)
    op.create_index(op.f('ix_threads_status'), 'threads', ['status'], unique=False)
    op.create_index('uix_job_thread', 'threads', ['job_id', 'name'], unique=True)
    op.create_table(
        'function_call_thread',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('function_call_id', sa.Integer(), nullable=False),
        sa.Column('thread_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['function_call_id'], ['function_calls.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['thread_id'], ['threads.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('uix_function_call_thread', 'function_call_thread', ['function_call_id', 'thread_id'], unique=True)
    op.create_table(
        'objects',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('thread_id', sa.Integer(), nullable=False),
        sa.Column('index', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['thread_id'], ['threads.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index('uix_objects', 'objects', ['thread_id', 'index'], unique=True)
    op.create_table(
        'items',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('object_id', sa.Integer(), nullable=False),
        sa.Column('key', sa.String(), nullable=False),
        sa.Column('value', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_index(op.f('ix_items_key'), 'items', ['key'], unique=False)
    op.create_index(op.f('ix_items_object_id'), 'items', ['object_id'], unique=False)
    op.create_table(
        'requests',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('object_id', sa.Integer(), nullable=False),
        sa.Column('operator_name', sa.String(), nullable=False),
        sa.Column('status', postgresql.ENUM('PENDING', 'RUNNING', 'DONE', 'FAILED', name='status'), nullable=False),
        sa.ForeignKeyConstraint(['object_id'], ['objects.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('object_id'),
    )
    op.create_index(op.f('ix_requests_operator_name'), 'requests', ['operator_name'], unique=False)
    op.create_index(op.f('ix_requests_status'), 'requests', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_requests_status'), table_name='requests')
    op.drop_index(op.f('ix_requests_operator_name'), table_name='requests')
    op.drop_table('requests')
    op.drop_index(op.f('ix_items_object_id'), table_name='items')
    op.drop_index(op.f('ix_items_key'), table_name='items')
    op.drop_table('items')
    op.drop_index('uix_objects', table_name='objects')
    op.drop_table('objects')
    op.drop_index('uix_function_call_thread', table_name='function_call_thread')
    op.drop_table('function_call_thread')
    op.drop_index('uix_job_thread', table_name='threads')
    op.drop_index(op.f('ix_threads_status'), table_name='threads')
    op.drop_index(op.f('ix_threads_job_id'), table_name='threads')
    op.drop_table('threads')
    op.drop_index('uix_job_function_call', table_name='function_calls')
    op.drop_index(op.f('ix_function_calls_status'), table_name='function_calls')
    op.drop_index(op.f('ix_function_calls_job_id'), table_name='function_calls')
    op.drop_table('function_calls')
    op.drop_index(op.f('ix_jobs_status'), table_name='jobs')
    op.drop_index(op.f('ix_jobs_name'), table_name='jobs')
    op.drop_table('jobs')
    # ### end Alembic commands ###
